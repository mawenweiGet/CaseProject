<UserControl x:Class="TemplateLibrary.BaseControlPromotionTemplate.ComboBoxChoice.ComboBox1"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:TemplateLibrary.BaseControlPromotionTemplate.ComboBoxChoice"
             mc:Ignorable="d">
    <UserControl.Resources>
        <!--组态标题窗边框样式-->
        <Style x:Key="BorderFrame" TargetType="Border">
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="BorderBrush" Value="Red"/>
                    <Setter Property="BorderThickness" Value="2"/>
                </Trigger>
                <Trigger Property="IsMouseOver" Value="False">
                    <Setter Property="BorderBrush" Value="White"/>
                    <Setter Property="BorderThickness" Value="0"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <!-- ComboBoxItem样式 -->
        <Style x:Key="ComboBoxItemStyle" TargetType="ComboBoxItem">
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Height" Value="28"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBoxItem">
                        <Border Name="Back" Background="Transparent" BorderThickness="0" BorderBrush="#FF6A6A6A" 
                                Margin="0 1 0 0" MouseMove="Back_MouseMove" MouseLeave="Back_MouseLeave">
                            <ContentPresenter ContentSource="{Binding Source}" Margin="{TemplateBinding Padding}" HorizontalAlignment="Left" VerticalAlignment="Center"></ContentPresenter>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsHighlighted" Value="True">
                                <Setter TargetName="Back" Property="Background" Value="#45C4ED"></Setter>
                            </Trigger>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter TargetName="Back" Property="Background" Value="#EDEDED"></Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- ToggleButton样式（折叠展开按钮） -->
        <Style x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="ClickMode" Value="Press"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border x:Name="templateRoot" CornerRadius="0" SnapsToDevicePixels="true" Background="{TemplateBinding Background}">
                            <Border x:Name="splitBorder" CornerRadius="1" Width="auto" SnapsToDevicePixels="true" Margin="0 0 5 0" HorizontalAlignment="Right" 
                                        BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="#FF565656">
                                <Path x:Name="arrow" VerticalAlignment="Center" Stretch="Fill" Height="3" Width="8.156" 
                                      HorizontalAlignment="Left" Fill="#45C4ED" Data="M 50,50 L 0,0 100,0 z" Margin="0,10"/>
                            </Border>
                        </Border>
                        <ControlTemplate.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <Setter TargetName="templateRoot" Property="CornerRadius" Value="3"/>
                                <Setter TargetName="templateRoot" Property="Background" Value="red"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FF565656"/>
                            </MultiDataTrigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Fill" TargetName="arrow" Value="#FFADADAD"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FFADADAD"/>
                            </Trigger>
                            <DataTrigger Binding="{Binding ElementName=templateRoot,Path=IsMouseOver}" Value="True">
                                <Setter TargetName="arrow" Property="Fill" Value="#45C4ED"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding ElementName=templateRoot,Path=IsMouseOver}" Value="false">
                                <!--<Setter TargetName="arrow" Property="Path.Data" Value="M 15,0 L 0,15 30,15 z"/>-->
                                <Setter TargetName="arrow" Property="Fill" Value="#898989"/>
                            </DataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!-- ComboBox Template样式 -->
        <ControlTemplate x:Key="ComboBoxTemplate" TargetType="{x:Type ComboBox}">
            <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition Width="0"/>
                </Grid.ColumnDefinitions>
                <Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Margin="1" 
                       PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom">
                    <Border x:Name="dropDownBorder" BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" BorderThickness="0" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" 
                            MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{Binding ActualWidth, ElementName=templateRoot}">
                        <ScrollViewer x:Name="DropDownScrollViewer">
                            <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                <Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                    <Rectangle x:Name="opaqueRect" Fill="{Binding Background, ElementName=dropDownBorder}" Height="{Binding ActualHeight, ElementName=dropDownBorder}" Width="{Binding ActualWidth, ElementName=dropDownBorder}"/>
                                </Canvas>
                                <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Continue" Background="#FFFFFFFF"/>
                            </Grid>
                        </ScrollViewer>
                    </Border>
                </Popup>
                <Border Grid.ColumnSpan="2" x:Name="OuterlayerBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1" CornerRadius="0">
                    <Grid>
                        <ToggleButton x:Name="toggleButton" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0" Background="{TemplateBinding Background}" Grid.ColumnSpan="2" 
                                      IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource ComboBoxToggleButton}"/>
                        <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" 
                                          Content="{TemplateBinding SelectionBoxItem}" ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                          IsHitTestVisible="false" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Grid>
                </Border>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="HasItems" Value="false">
                    <Setter Property="Height" TargetName="dropDownBorder" Value="95"/>
                </Trigger>
                <Trigger Property="ComboBoxItem.IsMouseOver" Value="true">
                    <Setter TargetName="OuterlayerBorder" Property="BorderBrush" Value="#45C4ED"/>
                </Trigger>
                <Trigger Property="ComboBoxItem.IsMouseOver" Value="false">
                    <Setter TargetName="OuterlayerBorder" Property="BorderBrush" Value="Transparent"/>
                </Trigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsGrouping" Value="true"/>
                        <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                </MultiTrigger>
                <Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
                    <Setter Property="Canvas.Top" TargetName="opaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                    <Setter Property="Canvas.Left" TargetName="opaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <!-- ComboBox属性设置 -->
        <Style x:Key="ComboBoxStyle" TargetType="{x:Type ComboBox}">
            <Setter Property="Background" Value="White"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="ItemContainerStyle" Value="{DynamicResource ComboBoxItemStyle}"/>
            <Setter Property="Template" Value="{StaticResource ComboBoxTemplate}"/>
        </Style>
        <!--详细信息为空时，屏蔽展示-->
        <Style x:Key="DetailsTextStyle" TargetType="TextBlock">
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Style.Triggers>
                <Trigger Property="Text" Value="{x:Null}">
                    <Setter Property="Visibility" Value="Collapsed"></Setter>
                </Trigger>
                <Trigger Property="Text" Value="">
                    <Setter Property="Visibility" Value="Collapsed"></Setter>
                </Trigger>
            </Style.Triggers>
        </Style>
    </UserControl.Resources>
    <DockPanel Height="45" Width="500" VerticalAlignment="Top">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="1"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="auto"/>
            </Grid.ColumnDefinitions>
            <Border x:Name="FBBackground" 
                    VerticalAlignment="Bottom"
                    Style="{StaticResource BorderFrame}"
                    Grid.Row="2"
                    Grid.ColumnSpan="4"
                    CornerRadius="1"
                    Panel.ZIndex="-1"
                    BorderBrush="#BBBBBB" 
                    BorderThickness="0.3"
                    />
            <TextBlock x:Name="IcoName_TextBlock" 
                       Style="{StaticResource DetailsTextStyle}"
                       Grid.Row="0"
                       FontSize="17"
                       Margin="0"
                       Foreground="#898989"
                       Grid.Column="0" 
                       FontFamily="pack://application:,,,/ResourceBase;component/Font/#icomoon"
                       VerticalAlignment="Center" 
                       MinWidth="20">图标</TextBlock>
            <Grid Grid.Column="1" Grid.Row="0">
                <StackPanel MaxWidth="300"
                        Orientation="Vertical"
                        VerticalAlignment="Center"
                        HorizontalAlignment="Center"
                        Margin="5,1,0,0">
                    <TextBlock x:Name="Title_TextBlock" 
                       FontSize="13" 
                       Background="Transparent"
                       FontFamily="Source Han Sans CN" 
                       FontWeight="Medium"
                       Foreground="#898989"
                       VerticalAlignment="Center" 
                       TextWrapping="Wrap"
                       Text="说明"/>
                    <TextBlock x:Name="Comment_TextBlock"
                       Margin="0 5 0 0"
                       Style="{StaticResource DetailsTextStyle}"
                       FontFamily="Source Han Sans CN" 
                       FontWeight="Medium"
                       Background="Transparent"
                       TextWrapping="Wrap"
                       Grid.Row="1" FontSize="10" 
                       Foreground="#898989" Text="详情"
                       />
                </StackPanel>
            </Grid>
            <ComboBox x:Name="m_cmbBoxContent" HorizontalAlignment="Right" 
                      Style="{StaticResource ComboBoxStyle}"
                      Grid.Row="0" Grid.Column="2" MinWidth="180" Height="25"
                      FontFamily="Source Han Sans CN" 
                      Foreground="#898989"
                      IsReadOnly="True"
                      IsEditable="False"
                      Margin="2,0,10,0">
            </ComboBox>
            <TextBlock x:Name="m_txtBlockUnit" 
                   Style="{StaticResource DetailsTextStyle}"
                   Grid.Column="3" Grid.Row="0"
                   VerticalAlignment="Center" 
                   FontSize="16"
                   HorizontalAlignment="Right" 
                   Text="单位"
                       Margin="0,0,10,0"/>
        </Grid>
    </DockPanel>
</UserControl>
