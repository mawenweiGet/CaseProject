<UserControl x:Class="TemplateLibrary.BaseControlPromotionTemplate.DataGridControl.TableControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:TemplateLibrary.BaseControlPromotionTemplate.DataGridControl"
             mc:Ignorable="d">
    <UserControl.Resources>
        <Style TargetType="DataGrid">
            <Setter Property="Background" Value="{x:Null}"/>
            <Setter Property="RowStyle" Value="{DynamicResource DataGridRowStyle}"/>
            <Setter Property="HorizontalGridLinesBrush">
                <Setter.Value>
                    <SolidColorBrush Color="AliceBlue"></SolidColorBrush>
                </Setter.Value>
            </Setter>
            <Setter Property="MinRowHeight" Value="32"></Setter>
            <Setter Property="FontSize" Value="14"></Setter>
        </Style>
        <Style x:Key="DataGridRowStyle" TargetType="DataGridRow">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <!--<Setter Property="BorderThickness" Value="0"/>
            <Setter Property="MinWidth" Value="85"/>-->
            <Style.Triggers>
                <Trigger Property="Focusable" Value="True">
                    <Setter Property="Background" Value="Red"/>

                </Trigger>
                <Trigger Property="IsSelected" Value="False">
                    <Setter Property="Background" Value="Transparent"/>

                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="ElementStyle" TargetType="FrameworkElement">
            <Setter Property="VerticalAlignment" Value="Center"></Setter>
            <Setter Property="HorizontalAlignment" Value="Center"></Setter>
        </Style>
        <Style TargetType="TextBlock" BasedOn="{StaticResource ElementStyle}">
            <Setter Property="MinHeight" Value="24"></Setter>
            <Setter Property="MinWidth" Value="100"></Setter>
            <Setter Property="TextAlignment" Value="Center"></Setter>
        </Style>
        <Style TargetType="TextBox" BasedOn="{StaticResource ElementStyle}">
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="BorderBrush">
                <Setter.Value>
                    <SolidColorBrush Color="#d6c79b"/>
                </Setter.Value>
            </Setter>
            <Setter Property="MinHeight" Value="24"/>
            <Setter Property="MinWidth" Value="100"/>
            <Setter Property="Margin" Value="5,2,5,2"/>
            <Setter Property="TextAlignment" Value="Center"/>
        </Style>

        <VisualBrush x:Key="HelpBrush" TileMode="None" Opacity="0.2" Stretch="None" AlignmentX="Left">
            <VisualBrush.Visual>
                <TextBlock  FontStyle="Normal" Text="请输入"/>
            </VisualBrush.Visual>
        </VisualBrush>
        <!--输入提示输入文本样式-->
        <Style x:Key="TipsInputStyle" TargetType="TextBox">
            <Setter Property="Width" Value="100"/>
            <Setter Property="Height" Value="20"/>
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="FontSize" Value="15"/>
            <Setter Property="HorizontalAlignment" Value="Right"/>

            <Style.Triggers>
                <Trigger Property="Text" Value="{x:Null}">
                    <Setter Property="Background" Value="{StaticResource HelpBrush}"/>
                </Trigger>
                <Trigger Property="Text" Value="">
                    <Setter Property="Background" Value="{StaticResource HelpBrush}"/>
                </Trigger>
                <Trigger Property="TextBox.IsFocused" Value="True">
                    <Setter Property="TextAlignment" Value="Center"/>
                    <Setter Property="Background" Value="#DDDDDD"/>
                    <Setter Property="BorderThickness" Value="0.2"/>
                </Trigger>
                <Trigger Property="TextBox.IsFocused" Value="False">
                    <Setter Property="TextAlignment" Value="Right"/>
                </Trigger>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="BorderBrush" Value="AliceBlue"/>
                </Trigger>
                <Trigger Property="IsMouseOver" Value="False">
                    <Setter Property="BorderThickness" Value="0"/>
                </Trigger>
                <Trigger Property="Validation.HasError" Value="True">
                    <Setter Property="BorderBrush" Value="Red"/>
                    <Setter Property="BorderThickness" Value="1.5"/>
                </Trigger>
            </Style.Triggers>
        </Style>
    </UserControl.Resources>
    <Grid x:Name="Work" Width="800">
        <ScrollViewer VerticalScrollBarVisibility="Hidden"  HorizontalScrollBarVisibility="Auto"
                      Height="{Binding ElementName=Work, Path=ActualHeight}"
                      Width="{Binding ElementName=Work, Path=ActualWidth}">
            <StackPanel>
                <UniformGrid Columns="2">
                    <Label HorizontalAlignment="Center">温度数据</Label>
                    <Label HorizontalAlignment="Center">电阻数据</Label>
                </UniformGrid>
                <DataGrid HeadersVisibility="None" AutoGenerateColumns="False" BorderBrush="AliceBlue" BorderThickness="2"
                          Height="500" Width="{Binding ElementName=Work, Path=ActualWidth}"
                          CanUserAddRows="False" x:Name="dgData" GridLinesVisibility="Horizontal">
                    <DataGrid.Columns>
                        <DataGridTemplateColumn Width="3*">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBlock x:Name="L_textBlock" Text="{Binding Path=ParamKey,Mode=OneWay,UpdateSourceTrigger=PropertyChanged}"/>
                                    <DataTemplate.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <!--<Setter TargetName="L_textBlock" Property="Background" Value="Red"/>-->
                                        </Trigger>
                                    </DataTemplate.Triggers>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                            <DataGridTemplateColumn.CellEditingTemplate>
                                <DataTemplate>
                                    <!--<TextBox  Text="{Binding Path=ParamKey,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged,TargetNullValue=请输入温度}"></TextBox>-->
                                    <TextBox Text="{Binding Path=ParamKey,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource TipsInputStyle}"/>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellEditingTemplate>
                        </DataGridTemplateColumn>
                        <DataGridTemplateColumn Width="10">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBlock Text=":"></TextBlock>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                        <DataGridTemplateColumn Width="3*">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBlock x:Name="R_textBlock" Text="{Binding Path=ParamValue,Mode=OneWay,UpdateSourceTrigger=PropertyChanged}"/>
                                    <DataTemplate.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <!--<Setter TargetName="R_textBlock" Property="Background" Value="Red"/>-->
                                        </Trigger>
                                    </DataTemplate.Triggers>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                            <DataGridTemplateColumn.CellEditingTemplate>
                                <DataTemplate>
                                    <!--<TextBox  Text="{Binding Path=ParamValue,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged,TargetNullValue=请输入电阻}"></TextBox>-->
                                    <TextBox Text="{Binding Path=ParamValue,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource TipsInputStyle}"/>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellEditingTemplate>
                        </DataGridTemplateColumn>
                        <DataGridTemplateColumn Width="30">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBlock  MouseLeftButtonUp="btnDel_Click"
                                                x:Name="Del_textBlock"
                                                FontSize="20"
                                                Text="&#xf05c;"
                                                Margin="0"
                                                Foreground="CornflowerBlue"
                                                Grid.Column="0" 
                                                FontFamily="pack://application:,,,/ResourceBase;component/Font/#icomoon"
                                                VerticalAlignment="Center" 
                                                MinWidth="20"/>
                                    <DataTemplate.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter TargetName="Del_textBlock" Property="Foreground" Value="Red"/>
                                            <Setter TargetName="Del_textBlock" Property="FontSize" Value="23"/>
                                        </Trigger>
                                        <Trigger Property="IsMouseOver" Value="False">
                                            <Setter TargetName="Del_textBlock" Property="Foreground" Value="CornflowerBlue"/>
                                        </Trigger>
                                    </DataTemplate.Triggers>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                    </DataGrid.Columns>
                </DataGrid>
                <Grid Width="35">
                    <TextBlock  MouseLeftButtonUp="btnAdd_Click"
                                x:Name="Add_textBlock"
                                FontSize="35"
                                Text="&#xf055;"
                                Margin="0"
                                Foreground="CornflowerBlue"
                                Grid.Column="0" 
                                FontFamily="pack://application:,,,/ResourceBase;component/Font/#icomoon"
                                VerticalAlignment="Center" 
                                MinWidth="20"/>
                </Grid>
            </StackPanel>
        </ScrollViewer>
    </Grid>
</UserControl>
